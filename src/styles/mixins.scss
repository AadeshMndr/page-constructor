@import './variables.scss';

@mixin block {
    margin-top: $indentL;
    padding: 0 0 $indentL;

    &:first-child {
        margin-top: $indentXXL;
    }

    @media only screen and (max-width: map-get($gridBreakpoints, 'sm')) {
        margin-top: $indentM;
        // redefine grid column paddings
        /* stylelint-disable-next-line declaration-no-important */
        padding-bottom: $indentM !important;

        &:first-child {
            margin-top: $indentXL;
        }
    }
}

@mixin reset-col-indents {
    padding-left: 0;
    padding-right: 0;

    @media only screen and (max-width: map-get($gridBreakpoints, 'sm')) {
        /* stylelint-disable declaration-no-important */
        padding-left: 0 !important;
        padding-right: 0 !important;
        /* stylelint-enable declaration-no-important */
    }
}

@mixin add-theme() {
    &_theme_dark {
        color: var(--yc-color-text-light-primary);

        h1,
        h2,
        h3,
        h4,
        h5,
        h6,
        .yfm {
            color: var(--yc-color-text-light-primary);
        }
    }
}

@mixin justify() {
    &_justify_center {
        text-align: center;
    }

    &_justify_end {
        text-align: right;
    }
}

@mixin background() {
    background-repeat: no-repeat;
    background-size: cover;
    background-position: center;
}

@mixin shadow() {
    @extend %shadow-hover;
}

%shadow {
    box-shadow: 0px 4px 24px var(--www-color-sfx-shadow), 0px 2px 8px var(--www-color-sfx-shadow);
}

%shadow-hover {
    @extend %shadow;

    &:hover {
        box-shadow: 0px 4px 24px var(--yc-color-sfx-shadow), 0px 2px 8px var(--yc-color-sfx-shadow);
        cursor: pointer;
    }
}

@mixin image-shadow() {
    box-shadow: 0 2px 8px var(--www-color-sfx-shadow), 0 4px 24px var(--www-color-sfx-shadow);
    overflow-x: hidden;
    border-radius: 12px;
}

@mixin card($hover: false) {
    min-height: 248px;
    height: 100%;
    overflow-x: hidden;
    border-radius: 12px;
    background-color: var(--yc-color-base-background);

    transition: box-shadow 0.3s $ease-out-cubic;

    &_border_line {
        border: 1px solid var(--yc-color-line-generic);
    }

    &_border_shadow {
        @extend %shadow;
    }

    @if $hover {
        @extend %shadow-hover;
    }
}

@mixin reset-link-hover {
    &:hover,
    &:active {
        --www-text-header-color: inherit;
        color: inherit;
    }
}

@mixin animate-wrap {
    @media (min-width: map-get($gridBreakpoints, 'md')) {
        &.AnimateBlock,
        .AnimateBlock & {
            @content;
        }
    }
}

@mixin animate($class: null, $delay: 0s) {
    @include animate-wrap {
        & #{$class} {
            position: relative;
            top: 100px;
            opacity: 0;
        }

        &.animate #{$class} {
            top: 0;
            opacity: 1;
            transition: top $transition, opacity $transition;
            transition-delay: $delay;
        }
    }
}

@mixin animate-fade($class: null, $delay: 0s) {
    @include animate-wrap {
        & #{$class} {
            opacity: 0;
        }

        &.animate #{$class} {
            opacity: 1;
            transition: opacity $transition;
            transition-delay: $delay;
        }
    }
}

@mixin animate-slides($item-class, $delay: 0s) {
    @include animate-wrap {
        & #{$item-class} {
            position: relative;
            top: 100px;
            opacity: 0;
        }

        &.animate {
            #{$item-class} {
                top: 0;
                opacity: 1;
                transition: top $transition, opacity $transition;
            }

            @for $i from 0 through 9 {
                #{$item-class}:nth-child(#{$i}) {
                    transition-delay: $i * 0.1s + $delay;
                }
            }
        }
    }
}
